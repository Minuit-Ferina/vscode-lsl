// Generated from LSLLexer.g4 by ANTLR 4.13.0
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
	ATN,
	ATNDeserializer,
	CharStream,
	DecisionState, DFA,
	Lexer,
	LexerATNSimulator,
	RuleContext,
	PredictionContextCache,
	Token
} from "antlr4";
export default class LSLLexer extends Lexer {
	public static readonly Integer = 1;
	public static readonly Float = 2;
	public static readonly String = 3;
	public static readonly Key = 4;
	public static readonly Vector = 5;
	public static readonly Quaternion = 6;
	public static readonly Rotation = 7;
	public static readonly List = 8;
	public static readonly StateDefault = 9;
	public static readonly State = 10;
	public static readonly Event = 11;
	public static readonly Jump = 12;
	public static readonly Return = 13;
	public static readonly If = 14;
	public static readonly Else = 15;
	public static readonly For = 16;
	public static readonly Do = 17;
	public static readonly While = 18;
	public static readonly Switch = 19;
	public static readonly Case = 20;
	public static readonly Break = 21;
	public static readonly Print = 22;
	public static readonly Dot = 23;
	public static readonly IntegerTrue = 24;
	public static readonly IntegerFalse = 25;
	public static readonly ZeroVector = 26;
	public static readonly ZeroRotation = 27;
	public static readonly TouchInvalidVector = 28;
	public static readonly TouchInvalidTexcoord = 29;
	public static readonly PlusPlus = 30;
	public static readonly MinusMinus = 31;
	public static readonly PlusAssign = 32;
	public static readonly MinusAssign = 33;
	public static readonly StarAssign = 34;
	public static readonly DivAssign = 35;
	public static readonly ModAssign = 36;
	public static readonly Semi = 37;
	public static readonly Comma = 38;
	public static readonly Assign = 39;
	public static readonly LeftParen = 40;
	public static readonly RightParen = 41;
	public static readonly LeftBracket = 42;
	public static readonly RightBracket = 43;
	public static readonly LeftBrace = 44;
	public static readonly RightBrace = 45;
	public static readonly Plus = 46;
	public static readonly Minus = 47;
	public static readonly Asterisk = 48;
	public static readonly At = 49;
	public static readonly Greater = 50;
	public static readonly Less = 51;
	public static readonly EQ = 52;
	public static readonly NEQ = 53;
	public static readonly GreaterEqual = 54;
	public static readonly LessEqual = 55;
	public static readonly And = 56;
	public static readonly Or = 57;
	public static readonly Caret = 58;
	public static readonly Tilde = 59;
	public static readonly Not = 60;
	public static readonly AndAnd = 61;
	public static readonly OrOr = 62;
	public static readonly LeftShift = 63;
	public static readonly RightShift = 64;
	public static readonly StringConstant = 65;
	public static readonly Slash = 66;
	public static readonly Mod = 67;
	public static readonly HexIntegerLiteral = 68;
	public static readonly BinaryIntegerLiteral = 69;
	public static readonly StringLiteral = 70;
	public static readonly FloatingConstant = 71;
	public static readonly DigitSequence = 72;
	public static readonly MultiLineMacro = 73;
	public static readonly Directive = 74;
	public static readonly Whitespace = 75;
	public static readonly Newline = 76;
	public static readonly BlockComment = 77;
	public static readonly LineComment = 78;
	public static readonly Identifier = 79;
	public static readonly EOF = Token.EOF;

	public static readonly channelNames: string[] = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN", 
                                                                                      "WHITESPACE_CHANNEL", 
                                                                                      "COMMENTS_CHANNEL" ];
	public static readonly literalNames: (string | null)[] = [ null, "'integer'", 
                                                            "'float'", "'string'", 
                                                            "'key'", "'vector'", 
                                                            "'quaternion'", 
                                                            "'rotation'", 
                                                            "'list'", "'default'", 
                                                            "'state'", "'event'", 
                                                            "'jump'", "'return'", 
                                                            "'if'", "'else'", 
                                                            "'for'", "'do'", 
                                                            "'while'", "'switch'", 
                                                            "'case'", "'break'", 
                                                            "'print'", "'.'", 
                                                            "'TRUE'", "'FALSE'", 
                                                            "'ZERO_Vector'", 
                                                            "'ZERO_ROTATION'", 
                                                            "'TOUCH_INVALID_Vector'", 
                                                            "'TOUCH_INVALID_TEXCOORD'", 
                                                            "'++'", "'--'", 
                                                            "'+='", "'-='", 
                                                            "'*='", "'/='", 
                                                            "'%='", "';'", 
                                                            "','", "'='", 
                                                            "'('", "')'", 
                                                            "'['", "']'", 
                                                            "'{'", "'}'", 
                                                            "'+'", "'-'", 
                                                            "'*'", "'@'", 
                                                            "'>'", "'<'", 
                                                            "'=='", "'!='", 
                                                            "'>='", "'<='", 
                                                            "'&'", "'|'", 
                                                            "'^'", "'~'", 
                                                            "'!'", "'&&'", 
                                                            "'||'", "'<<'", 
                                                            "'>>'", null, 
                                                            "'/'", "'%'" ];
	public static readonly symbolicNames: (string | null)[] = [ null, "Integer", 
                                                             "Float", "String", 
                                                             "Key", "Vector", 
                                                             "Quaternion", 
                                                             "Rotation", 
                                                             "List", "StateDefault", 
                                                             "State", "Event", 
                                                             "Jump", "Return", 
                                                             "If", "Else", 
                                                             "For", "Do", 
                                                             "While", "Switch", 
                                                             "Case", "Break", 
                                                             "Print", "Dot", 
                                                             "IntegerTrue", 
                                                             "IntegerFalse", 
                                                             "ZeroVector", 
                                                             "ZeroRotation", 
                                                             "TouchInvalidVector", 
                                                             "TouchInvalidTexcoord", 
                                                             "PlusPlus", 
                                                             "MinusMinus", 
                                                             "PlusAssign", 
                                                             "MinusAssign", 
                                                             "StarAssign", 
                                                             "DivAssign", 
                                                             "ModAssign", 
                                                             "Semi", "Comma", 
                                                             "Assign", "LeftParen", 
                                                             "RightParen", 
                                                             "LeftBracket", 
                                                             "RightBracket", 
                                                             "LeftBrace", 
                                                             "RightBrace", 
                                                             "Plus", "Minus", 
                                                             "Asterisk", 
                                                             "At", "Greater", 
                                                             "Less", "EQ", 
                                                             "NEQ", "GreaterEqual", 
                                                             "LessEqual", 
                                                             "And", "Or", 
                                                             "Caret", "Tilde", 
                                                             "Not", "AndAnd", 
                                                             "OrOr", "LeftShift", 
                                                             "RightShift", 
                                                             "StringConstant", 
                                                             "Slash", "Mod", 
                                                             "HexIntegerLiteral", 
                                                             "BinaryIntegerLiteral", 
                                                             "StringLiteral", 
                                                             "FloatingConstant", 
                                                             "DigitSequence", 
                                                             "MultiLineMacro", 
                                                             "Directive", 
                                                             "Whitespace", 
                                                             "Newline", 
                                                             "BlockComment", 
                                                             "LineComment", 
                                                             "Identifier" ];
	public static readonly modeNames: string[] = [ "DEFAULT_MODE", ];

	public static readonly ruleNames: string[] = [
		"Integer", "Float", "String", "Key", "Vector", "Quaternion", "Rotation", 
		"List", "StateDefault", "State", "Event", "Jump", "Return", "If", "Else", 
		"For", "Do", "While", "Switch", "Case", "Break", "Print", "Dot", "IntegerTrue", 
		"IntegerFalse", "ZeroVector", "ZeroRotation", "TouchInvalidVector", "TouchInvalidTexcoord", 
		"PlusPlus", "MinusMinus", "PlusAssign", "MinusAssign", "StarAssign", "DivAssign", 
		"ModAssign", "Semi", "Comma", "Assign", "LeftParen", "RightParen", "LeftBracket", 
		"RightBracket", "LeftBrace", "RightBrace", "Plus", "Minus", "Asterisk", 
		"At", "Greater", "Less", "EQ", "NEQ", "GreaterEqual", "LessEqual", "And", 
		"Or", "Caret", "Tilde", "Not", "AndAnd", "OrOr", "LeftShift", "RightShift", 
		"StringConstant", "Slash", "Mod", "HexIntegerLiteral", "BinaryIntegerLiteral", 
		"StringLiteral", "HexDigit", "DoubleStringCharacter", "SingleStringCharacter", 
		"LineContinuation", "EscapeSequence", "CharacterEscapeSequence", "SingleEscapeCharacter", 
		"HexEscapeSequence", "NonEscapeCharacter", "IdentifierNondigit", "Nondigit", 
		"HexadecimalConstant", "HexadecimalPrefix", "HexadecimalDigit", "BinaryConstant", 
		"DecimalConstant", "NonzeroDigit", "FloatingConstant", "HexadecimalDigitSequence", 
		"DecimalFloatingConstant", "FractionalConstant", "ExponentPart", "Sign", 
		"DigitSequence", "Digit", "FloatingSuffix", "MultiLineMacro", "Directive", 
		"Whitespace", "Newline", "BlockComment", "LineComment", "Identifier",
	];


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(this, LSLLexer._ATN, LSLLexer.DecisionsToDFA, new PredictionContextCache());
	}

	public get grammarFileName(): string { return "LSLLexer.g4"; }

	public get literalNames(): (string | null)[] { return LSLLexer.literalNames; }
	public get symbolicNames(): (string | null)[] { return LSLLexer.symbolicNames; }
	public get ruleNames(): string[] { return LSLLexer.ruleNames; }

	public get serializedATN(): number[] { return LSLLexer._serializedATN; }

	public get channelNames(): string[] { return LSLLexer.channelNames; }

	public get modeNames(): string[] { return LSLLexer.modeNames; }

	public static readonly _serializedATN: number[] = [4,0,79,752,6,-1,2,0,
	7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,
	7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,
	16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,
	2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,
	31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,
	7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
	45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,
	2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,
	60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,
	7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,
	74,2,75,7,75,2,76,7,76,2,77,7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,
	2,82,7,82,2,83,7,83,2,84,7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,
	89,7,89,2,90,7,90,2,91,7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,
	7,96,2,97,7,97,2,98,7,98,2,99,7,99,2,100,7,100,2,101,7,101,2,102,7,102,
	1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,
	1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,
	1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,
	1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,10,
	1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,
	12,1,12,1,12,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,
	1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,
	18,1,18,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,
	1,21,1,21,1,21,1,21,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,
	24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,
	1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,
	27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,
	1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,
	28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,
	1,29,1,29,1,29,1,30,1,30,1,30,1,31,1,31,1,31,1,32,1,32,1,32,1,33,1,33,1,
	33,1,34,1,34,1,34,1,35,1,35,1,35,1,36,1,36,1,37,1,37,1,38,1,38,1,39,1,39,
	1,40,1,40,1,41,1,41,1,42,1,42,1,43,1,43,1,44,1,44,1,45,1,45,1,46,1,46,1,
	47,1,47,1,48,1,48,1,49,1,49,1,50,1,50,1,51,1,51,1,51,1,52,1,52,1,52,1,53,
	1,53,1,53,1,54,1,54,1,54,1,55,1,55,1,56,1,56,1,57,1,57,1,58,1,58,1,59,1,
	59,1,60,1,60,1,60,1,61,1,61,1,61,1,62,1,62,1,62,1,63,1,63,1,63,1,64,1,64,
	5,64,512,8,64,10,64,12,64,515,9,64,1,64,1,64,1,65,1,65,1,66,1,66,1,67,1,
	67,1,67,1,67,5,67,527,8,67,10,67,12,67,530,9,67,1,68,1,68,5,68,534,8,68,
	10,68,12,68,537,9,68,1,68,1,68,1,69,1,69,5,69,543,8,69,10,69,12,69,546,
	9,69,1,69,1,69,1,69,5,69,551,8,69,10,69,12,69,554,9,69,1,69,3,69,557,8,
	69,1,70,1,70,1,71,1,71,1,71,1,71,3,71,565,8,71,1,72,1,72,1,72,1,72,3,72,
	571,8,72,1,73,1,73,1,73,1,74,1,74,1,74,3,74,579,8,74,1,75,1,75,3,75,583,
	8,75,1,76,1,76,1,77,1,77,1,77,1,77,1,78,1,78,1,79,1,79,1,80,1,80,1,81,1,
	81,4,81,599,8,81,11,81,12,81,600,1,82,1,82,1,82,1,83,1,83,1,84,1,84,1,84,
	4,84,611,8,84,11,84,12,84,612,1,85,1,85,5,85,617,8,85,10,85,12,85,620,9,
	85,1,86,1,86,1,87,1,87,1,88,4,88,627,8,88,11,88,12,88,628,1,89,1,89,3,89,
	633,8,89,1,89,3,89,636,8,89,1,89,1,89,1,89,3,89,641,8,89,3,89,643,8,89,
	1,90,3,90,646,8,90,1,90,1,90,1,90,1,90,1,90,3,90,653,8,90,1,91,1,91,3,91,
	657,8,91,1,91,1,91,1,92,1,92,1,93,4,93,664,8,93,11,93,12,93,665,1,94,1,
	94,1,95,1,95,1,96,1,96,5,96,674,8,96,10,96,12,96,677,9,96,1,96,1,96,3,96,
	681,8,96,1,96,4,96,684,8,96,11,96,12,96,685,1,96,4,96,689,8,96,11,96,12,
	96,690,1,96,1,96,1,97,1,97,5,97,697,8,97,10,97,12,97,700,9,97,1,97,1,97,
	1,98,4,98,705,8,98,11,98,12,98,706,1,98,1,98,1,99,1,99,3,99,713,8,99,1,
	99,3,99,716,8,99,1,99,1,99,1,100,1,100,1,100,1,100,5,100,724,8,100,10,100,
	12,100,727,9,100,1,100,1,100,1,100,1,100,1,100,1,101,1,101,1,101,1,101,
	5,101,738,8,101,10,101,12,101,741,9,101,1,101,1,101,1,102,1,102,1,102,5,
	102,748,8,102,10,102,12,102,751,9,102,3,513,675,725,0,103,1,1,3,2,5,3,7,
	4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,
	17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,
	29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,
	41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,
	105,53,107,54,109,55,111,56,113,57,115,58,117,59,119,60,121,61,123,62,125,
	63,127,64,129,65,131,66,133,67,135,68,137,69,139,70,141,0,143,0,145,0,147,
	0,149,0,151,0,153,0,155,0,157,0,159,0,161,0,163,0,165,0,167,0,169,0,171,
	0,173,0,175,71,177,0,179,0,181,0,183,0,185,0,187,72,189,0,191,0,193,73,
	195,74,197,75,199,76,201,77,203,78,205,79,1,0,20,2,0,88,88,120,120,3,0,
	48,57,65,70,97,102,1,0,48,49,2,0,48,49,95,95,2,0,66,66,98,98,4,0,48,57,
	65,70,95,95,97,102,4,0,10,10,13,13,34,34,92,92,4,0,10,10,13,13,39,39,92,
	92,3,0,10,10,13,13,8232,8233,9,0,34,34,39,39,92,92,98,98,102,102,110,110,
	114,114,116,116,118,118,12,0,10,10,13,13,34,34,39,39,48,57,92,92,98,98,
	102,102,110,110,114,114,116,118,120,120,3,0,65,90,95,95,97,122,1,0,49,57,
	2,0,69,69,101,101,2,0,43,43,45,45,1,0,48,57,4,0,70,70,76,76,102,102,108,
	108,1,0,10,10,2,0,9,9,32,32,2,0,10,10,13,13,764,0,1,1,0,0,0,0,3,1,0,0,0,
	0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,
	0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,
	27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,
	0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,
	49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,
	0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,
	71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,
	0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,
	93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,
	0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,
	0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,
	0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,
	0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,175,1,0,0,0,0,187,1,0,0,0,0,
	193,1,0,0,0,0,195,1,0,0,0,0,197,1,0,0,0,0,199,1,0,0,0,0,201,1,0,0,0,0,203,
	1,0,0,0,0,205,1,0,0,0,1,207,1,0,0,0,3,215,1,0,0,0,5,221,1,0,0,0,7,228,1,
	0,0,0,9,232,1,0,0,0,11,239,1,0,0,0,13,250,1,0,0,0,15,259,1,0,0,0,17,264,
	1,0,0,0,19,272,1,0,0,0,21,278,1,0,0,0,23,284,1,0,0,0,25,289,1,0,0,0,27,
	296,1,0,0,0,29,299,1,0,0,0,31,304,1,0,0,0,33,308,1,0,0,0,35,311,1,0,0,0,
	37,317,1,0,0,0,39,324,1,0,0,0,41,329,1,0,0,0,43,335,1,0,0,0,45,341,1,0,
	0,0,47,343,1,0,0,0,49,348,1,0,0,0,51,354,1,0,0,0,53,366,1,0,0,0,55,380,
	1,0,0,0,57,401,1,0,0,0,59,424,1,0,0,0,61,427,1,0,0,0,63,430,1,0,0,0,65,
	433,1,0,0,0,67,436,1,0,0,0,69,439,1,0,0,0,71,442,1,0,0,0,73,445,1,0,0,0,
	75,447,1,0,0,0,77,449,1,0,0,0,79,451,1,0,0,0,81,453,1,0,0,0,83,455,1,0,
	0,0,85,457,1,0,0,0,87,459,1,0,0,0,89,461,1,0,0,0,91,463,1,0,0,0,93,465,
	1,0,0,0,95,467,1,0,0,0,97,469,1,0,0,0,99,471,1,0,0,0,101,473,1,0,0,0,103,
	475,1,0,0,0,105,478,1,0,0,0,107,481,1,0,0,0,109,484,1,0,0,0,111,487,1,0,
	0,0,113,489,1,0,0,0,115,491,1,0,0,0,117,493,1,0,0,0,119,495,1,0,0,0,121,
	497,1,0,0,0,123,500,1,0,0,0,125,503,1,0,0,0,127,506,1,0,0,0,129,509,1,0,
	0,0,131,518,1,0,0,0,133,520,1,0,0,0,135,522,1,0,0,0,137,531,1,0,0,0,139,
	556,1,0,0,0,141,558,1,0,0,0,143,564,1,0,0,0,145,570,1,0,0,0,147,572,1,0,
	0,0,149,578,1,0,0,0,151,582,1,0,0,0,153,584,1,0,0,0,155,586,1,0,0,0,157,
	590,1,0,0,0,159,592,1,0,0,0,161,594,1,0,0,0,163,596,1,0,0,0,165,602,1,0,
	0,0,167,605,1,0,0,0,169,607,1,0,0,0,171,614,1,0,0,0,173,621,1,0,0,0,175,
	623,1,0,0,0,177,626,1,0,0,0,179,642,1,0,0,0,181,652,1,0,0,0,183,654,1,0,
	0,0,185,660,1,0,0,0,187,663,1,0,0,0,189,667,1,0,0,0,191,669,1,0,0,0,193,
	671,1,0,0,0,195,694,1,0,0,0,197,704,1,0,0,0,199,715,1,0,0,0,201,719,1,0,
	0,0,203,733,1,0,0,0,205,744,1,0,0,0,207,208,5,105,0,0,208,209,5,110,0,0,
	209,210,5,116,0,0,210,211,5,101,0,0,211,212,5,103,0,0,212,213,5,101,0,0,
	213,214,5,114,0,0,214,2,1,0,0,0,215,216,5,102,0,0,216,217,5,108,0,0,217,
	218,5,111,0,0,218,219,5,97,0,0,219,220,5,116,0,0,220,4,1,0,0,0,221,222,
	5,115,0,0,222,223,5,116,0,0,223,224,5,114,0,0,224,225,5,105,0,0,225,226,
	5,110,0,0,226,227,5,103,0,0,227,6,1,0,0,0,228,229,5,107,0,0,229,230,5,101,
	0,0,230,231,5,121,0,0,231,8,1,0,0,0,232,233,5,118,0,0,233,234,5,101,0,0,
	234,235,5,99,0,0,235,236,5,116,0,0,236,237,5,111,0,0,237,238,5,114,0,0,
	238,10,1,0,0,0,239,240,5,113,0,0,240,241,5,117,0,0,241,242,5,97,0,0,242,
	243,5,116,0,0,243,244,5,101,0,0,244,245,5,114,0,0,245,246,5,110,0,0,246,
	247,5,105,0,0,247,248,5,111,0,0,248,249,5,110,0,0,249,12,1,0,0,0,250,251,
	5,114,0,0,251,252,5,111,0,0,252,253,5,116,0,0,253,254,5,97,0,0,254,255,
	5,116,0,0,255,256,5,105,0,0,256,257,5,111,0,0,257,258,5,110,0,0,258,14,
	1,0,0,0,259,260,5,108,0,0,260,261,5,105,0,0,261,262,5,115,0,0,262,263,5,
	116,0,0,263,16,1,0,0,0,264,265,5,100,0,0,265,266,5,101,0,0,266,267,5,102,
	0,0,267,268,5,97,0,0,268,269,5,117,0,0,269,270,5,108,0,0,270,271,5,116,
	0,0,271,18,1,0,0,0,272,273,5,115,0,0,273,274,5,116,0,0,274,275,5,97,0,0,
	275,276,5,116,0,0,276,277,5,101,0,0,277,20,1,0,0,0,278,279,5,101,0,0,279,
	280,5,118,0,0,280,281,5,101,0,0,281,282,5,110,0,0,282,283,5,116,0,0,283,
	22,1,0,0,0,284,285,5,106,0,0,285,286,5,117,0,0,286,287,5,109,0,0,287,288,
	5,112,0,0,288,24,1,0,0,0,289,290,5,114,0,0,290,291,5,101,0,0,291,292,5,
	116,0,0,292,293,5,117,0,0,293,294,5,114,0,0,294,295,5,110,0,0,295,26,1,
	0,0,0,296,297,5,105,0,0,297,298,5,102,0,0,298,28,1,0,0,0,299,300,5,101,
	0,0,300,301,5,108,0,0,301,302,5,115,0,0,302,303,5,101,0,0,303,30,1,0,0,
	0,304,305,5,102,0,0,305,306,5,111,0,0,306,307,5,114,0,0,307,32,1,0,0,0,
	308,309,5,100,0,0,309,310,5,111,0,0,310,34,1,0,0,0,311,312,5,119,0,0,312,
	313,5,104,0,0,313,314,5,105,0,0,314,315,5,108,0,0,315,316,5,101,0,0,316,
	36,1,0,0,0,317,318,5,115,0,0,318,319,5,119,0,0,319,320,5,105,0,0,320,321,
	5,116,0,0,321,322,5,99,0,0,322,323,5,104,0,0,323,38,1,0,0,0,324,325,5,99,
	0,0,325,326,5,97,0,0,326,327,5,115,0,0,327,328,5,101,0,0,328,40,1,0,0,0,
	329,330,5,98,0,0,330,331,5,114,0,0,331,332,5,101,0,0,332,333,5,97,0,0,333,
	334,5,107,0,0,334,42,1,0,0,0,335,336,5,112,0,0,336,337,5,114,0,0,337,338,
	5,105,0,0,338,339,5,110,0,0,339,340,5,116,0,0,340,44,1,0,0,0,341,342,5,
	46,0,0,342,46,1,0,0,0,343,344,5,84,0,0,344,345,5,82,0,0,345,346,5,85,0,
	0,346,347,5,69,0,0,347,48,1,0,0,0,348,349,5,70,0,0,349,350,5,65,0,0,350,
	351,5,76,0,0,351,352,5,83,0,0,352,353,5,69,0,0,353,50,1,0,0,0,354,355,5,
	90,0,0,355,356,5,69,0,0,356,357,5,82,0,0,357,358,5,79,0,0,358,359,5,95,
	0,0,359,360,5,86,0,0,360,361,5,101,0,0,361,362,5,99,0,0,362,363,5,116,0,
	0,363,364,5,111,0,0,364,365,5,114,0,0,365,52,1,0,0,0,366,367,5,90,0,0,367,
	368,5,69,0,0,368,369,5,82,0,0,369,370,5,79,0,0,370,371,5,95,0,0,371,372,
	5,82,0,0,372,373,5,79,0,0,373,374,5,84,0,0,374,375,5,65,0,0,375,376,5,84,
	0,0,376,377,5,73,0,0,377,378,5,79,0,0,378,379,5,78,0,0,379,54,1,0,0,0,380,
	381,5,84,0,0,381,382,5,79,0,0,382,383,5,85,0,0,383,384,5,67,0,0,384,385,
	5,72,0,0,385,386,5,95,0,0,386,387,5,73,0,0,387,388,5,78,0,0,388,389,5,86,
	0,0,389,390,5,65,0,0,390,391,5,76,0,0,391,392,5,73,0,0,392,393,5,68,0,0,
	393,394,5,95,0,0,394,395,5,86,0,0,395,396,5,101,0,0,396,397,5,99,0,0,397,
	398,5,116,0,0,398,399,5,111,0,0,399,400,5,114,0,0,400,56,1,0,0,0,401,402,
	5,84,0,0,402,403,5,79,0,0,403,404,5,85,0,0,404,405,5,67,0,0,405,406,5,72,
	0,0,406,407,5,95,0,0,407,408,5,73,0,0,408,409,5,78,0,0,409,410,5,86,0,0,
	410,411,5,65,0,0,411,412,5,76,0,0,412,413,5,73,0,0,413,414,5,68,0,0,414,
	415,5,95,0,0,415,416,5,84,0,0,416,417,5,69,0,0,417,418,5,88,0,0,418,419,
	5,67,0,0,419,420,5,79,0,0,420,421,5,79,0,0,421,422,5,82,0,0,422,423,5,68,
	0,0,423,58,1,0,0,0,424,425,5,43,0,0,425,426,5,43,0,0,426,60,1,0,0,0,427,
	428,5,45,0,0,428,429,5,45,0,0,429,62,1,0,0,0,430,431,5,43,0,0,431,432,5,
	61,0,0,432,64,1,0,0,0,433,434,5,45,0,0,434,435,5,61,0,0,435,66,1,0,0,0,
	436,437,5,42,0,0,437,438,5,61,0,0,438,68,1,0,0,0,439,440,5,47,0,0,440,441,
	5,61,0,0,441,70,1,0,0,0,442,443,5,37,0,0,443,444,5,61,0,0,444,72,1,0,0,
	0,445,446,5,59,0,0,446,74,1,0,0,0,447,448,5,44,0,0,448,76,1,0,0,0,449,450,
	5,61,0,0,450,78,1,0,0,0,451,452,5,40,0,0,452,80,1,0,0,0,453,454,5,41,0,
	0,454,82,1,0,0,0,455,456,5,91,0,0,456,84,1,0,0,0,457,458,5,93,0,0,458,86,
	1,0,0,0,459,460,5,123,0,0,460,88,1,0,0,0,461,462,5,125,0,0,462,90,1,0,0,
	0,463,464,5,43,0,0,464,92,1,0,0,0,465,466,5,45,0,0,466,94,1,0,0,0,467,468,
	5,42,0,0,468,96,1,0,0,0,469,470,5,64,0,0,470,98,1,0,0,0,471,472,5,62,0,
	0,472,100,1,0,0,0,473,474,5,60,0,0,474,102,1,0,0,0,475,476,5,61,0,0,476,
	477,5,61,0,0,477,104,1,0,0,0,478,479,5,33,0,0,479,480,5,61,0,0,480,106,
	1,0,0,0,481,482,5,62,0,0,482,483,5,61,0,0,483,108,1,0,0,0,484,485,5,60,
	0,0,485,486,5,61,0,0,486,110,1,0,0,0,487,488,5,38,0,0,488,112,1,0,0,0,489,
	490,5,124,0,0,490,114,1,0,0,0,491,492,5,94,0,0,492,116,1,0,0,0,493,494,
	5,126,0,0,494,118,1,0,0,0,495,496,5,33,0,0,496,120,1,0,0,0,497,498,5,38,
	0,0,498,499,5,38,0,0,499,122,1,0,0,0,500,501,5,124,0,0,501,502,5,124,0,
	0,502,124,1,0,0,0,503,504,5,60,0,0,504,505,5,60,0,0,505,126,1,0,0,0,506,
	507,5,62,0,0,507,508,5,62,0,0,508,128,1,0,0,0,509,513,5,34,0,0,510,512,
	9,0,0,0,511,510,1,0,0,0,512,515,1,0,0,0,513,514,1,0,0,0,513,511,1,0,0,0,
	514,516,1,0,0,0,515,513,1,0,0,0,516,517,5,34,0,0,517,130,1,0,0,0,518,519,
	5,47,0,0,519,132,1,0,0,0,520,521,5,37,0,0,521,134,1,0,0,0,522,523,5,48,
	0,0,523,524,7,0,0,0,524,528,7,1,0,0,525,527,3,141,70,0,526,525,1,0,0,0,
	527,530,1,0,0,0,528,526,1,0,0,0,528,529,1,0,0,0,529,136,1,0,0,0,530,528,
	1,0,0,0,531,535,7,2,0,0,532,534,7,3,0,0,533,532,1,0,0,0,534,537,1,0,0,0,
	535,533,1,0,0,0,535,536,1,0,0,0,536,538,1,0,0,0,537,535,1,0,0,0,538,539,
	7,4,0,0,539,138,1,0,0,0,540,544,5,34,0,0,541,543,3,143,71,0,542,541,1,0,
	0,0,543,546,1,0,0,0,544,542,1,0,0,0,544,545,1,0,0,0,545,547,1,0,0,0,546,
	544,1,0,0,0,547,557,5,34,0,0,548,552,5,39,0,0,549,551,3,145,72,0,550,549,
	1,0,0,0,551,554,1,0,0,0,552,550,1,0,0,0,552,553,1,0,0,0,553,555,1,0,0,0,
	554,552,1,0,0,0,555,557,5,39,0,0,556,540,1,0,0,0,556,548,1,0,0,0,557,140,
	1,0,0,0,558,559,7,5,0,0,559,142,1,0,0,0,560,565,8,6,0,0,561,562,5,92,0,
	0,562,565,3,149,74,0,563,565,3,147,73,0,564,560,1,0,0,0,564,561,1,0,0,0,
	564,563,1,0,0,0,565,144,1,0,0,0,566,571,8,7,0,0,567,568,5,92,0,0,568,571,
	3,149,74,0,569,571,3,147,73,0,570,566,1,0,0,0,570,567,1,0,0,0,570,569,1,
	0,0,0,571,146,1,0,0,0,572,573,5,92,0,0,573,574,7,8,0,0,574,148,1,0,0,0,
	575,579,3,151,75,0,576,579,5,48,0,0,577,579,3,155,77,0,578,575,1,0,0,0,
	578,576,1,0,0,0,578,577,1,0,0,0,579,150,1,0,0,0,580,583,3,153,76,0,581,
	583,3,157,78,0,582,580,1,0,0,0,582,581,1,0,0,0,583,152,1,0,0,0,584,585,
	7,9,0,0,585,154,1,0,0,0,586,587,5,120,0,0,587,588,3,141,70,0,588,589,3,
	141,70,0,589,156,1,0,0,0,590,591,8,10,0,0,591,158,1,0,0,0,592,593,3,161,
	80,0,593,160,1,0,0,0,594,595,7,11,0,0,595,162,1,0,0,0,596,598,3,165,82,
	0,597,599,3,167,83,0,598,597,1,0,0,0,599,600,1,0,0,0,600,598,1,0,0,0,600,
	601,1,0,0,0,601,164,1,0,0,0,602,603,5,48,0,0,603,604,7,0,0,0,604,166,1,
	0,0,0,605,606,7,1,0,0,606,168,1,0,0,0,607,608,5,48,0,0,608,610,7,4,0,0,
	609,611,7,2,0,0,610,609,1,0,0,0,611,612,1,0,0,0,612,610,1,0,0,0,612,613,
	1,0,0,0,613,170,1,0,0,0,614,618,3,173,86,0,615,617,3,189,94,0,616,615,1,
	0,0,0,617,620,1,0,0,0,618,616,1,0,0,0,618,619,1,0,0,0,619,172,1,0,0,0,620,
	618,1,0,0,0,621,622,7,12,0,0,622,174,1,0,0,0,623,624,3,179,89,0,624,176,
	1,0,0,0,625,627,3,167,83,0,626,625,1,0,0,0,627,628,1,0,0,0,628,626,1,0,
	0,0,628,629,1,0,0,0,629,178,1,0,0,0,630,632,3,181,90,0,631,633,3,183,91,
	0,632,631,1,0,0,0,632,633,1,0,0,0,633,635,1,0,0,0,634,636,3,191,95,0,635,
	634,1,0,0,0,635,636,1,0,0,0,636,643,1,0,0,0,637,638,3,187,93,0,638,640,
	3,183,91,0,639,641,3,191,95,0,640,639,1,0,0,0,640,641,1,0,0,0,641,643,1,
	0,0,0,642,630,1,0,0,0,642,637,1,0,0,0,643,180,1,0,0,0,644,646,3,187,93,
	0,645,644,1,0,0,0,645,646,1,0,0,0,646,647,1,0,0,0,647,648,5,46,0,0,648,
	653,3,187,93,0,649,650,3,187,93,0,650,651,5,46,0,0,651,653,1,0,0,0,652,
	645,1,0,0,0,652,649,1,0,0,0,653,182,1,0,0,0,654,656,7,13,0,0,655,657,3,
	185,92,0,656,655,1,0,0,0,656,657,1,0,0,0,657,658,1,0,0,0,658,659,3,187,
	93,0,659,184,1,0,0,0,660,661,7,14,0,0,661,186,1,0,0,0,662,664,3,189,94,
	0,663,662,1,0,0,0,664,665,1,0,0,0,665,663,1,0,0,0,665,666,1,0,0,0,666,188,
	1,0,0,0,667,668,7,15,0,0,668,190,1,0,0,0,669,670,7,16,0,0,670,192,1,0,0,
	0,671,683,5,35,0,0,672,674,8,17,0,0,673,672,1,0,0,0,674,677,1,0,0,0,675,
	676,1,0,0,0,675,673,1,0,0,0,676,678,1,0,0,0,677,675,1,0,0,0,678,680,5,92,
	0,0,679,681,5,13,0,0,680,679,1,0,0,0,680,681,1,0,0,0,681,682,1,0,0,0,682,
	684,5,10,0,0,683,675,1,0,0,0,684,685,1,0,0,0,685,683,1,0,0,0,685,686,1,
	0,0,0,686,688,1,0,0,0,687,689,8,17,0,0,688,687,1,0,0,0,689,690,1,0,0,0,
	690,688,1,0,0,0,690,691,1,0,0,0,691,692,1,0,0,0,692,693,6,96,0,0,693,194,
	1,0,0,0,694,698,5,35,0,0,695,697,8,17,0,0,696,695,1,0,0,0,697,700,1,0,0,
	0,698,696,1,0,0,0,698,699,1,0,0,0,699,701,1,0,0,0,700,698,1,0,0,0,701,702,
	6,97,0,0,702,196,1,0,0,0,703,705,7,18,0,0,704,703,1,0,0,0,705,706,1,0,0,
	0,706,704,1,0,0,0,706,707,1,0,0,0,707,708,1,0,0,0,708,709,6,98,1,0,709,
	198,1,0,0,0,710,712,5,13,0,0,711,713,5,10,0,0,712,711,1,0,0,0,712,713,1,
	0,0,0,713,716,1,0,0,0,714,716,5,10,0,0,715,710,1,0,0,0,715,714,1,0,0,0,
	716,717,1,0,0,0,717,718,6,99,1,0,718,200,1,0,0,0,719,720,5,47,0,0,720,721,
	5,42,0,0,721,725,1,0,0,0,722,724,9,0,0,0,723,722,1,0,0,0,724,727,1,0,0,
	0,725,726,1,0,0,0,725,723,1,0,0,0,726,728,1,0,0,0,727,725,1,0,0,0,728,729,
	5,42,0,0,729,730,5,47,0,0,730,731,1,0,0,0,731,732,6,100,2,0,732,202,1,0,
	0,0,733,734,5,47,0,0,734,735,5,47,0,0,735,739,1,0,0,0,736,738,8,19,0,0,
	737,736,1,0,0,0,738,741,1,0,0,0,739,737,1,0,0,0,739,740,1,0,0,0,740,742,
	1,0,0,0,741,739,1,0,0,0,742,743,6,101,2,0,743,204,1,0,0,0,744,749,3,159,
	79,0,745,748,3,159,79,0,746,748,3,189,94,0,747,745,1,0,0,0,747,746,1,0,
	0,0,748,751,1,0,0,0,749,747,1,0,0,0,749,750,1,0,0,0,750,206,1,0,0,0,751,
	749,1,0,0,0,35,0,513,528,535,544,552,556,564,570,578,582,600,612,618,628,
	632,635,640,642,645,652,656,665,675,680,685,690,698,706,712,715,725,739,
	747,749,3,0,1,0,6,0,0,0,3,0];

	private static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!LSLLexer.__ATN) {
			LSLLexer.__ATN = new ATNDeserializer().deserialize(LSLLexer._serializedATN);
		}

		return LSLLexer.__ATN;
	}


	static DecisionsToDFA = LSLLexer._ATN.decisionToState.map( (ds: DecisionState, index: number) => new DFA(ds, index) );
}